name: CD - DAST (OWASP ZAP) - Debuggable

on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Show runner info (debug)
        run: |
          echo "Runner: $(uname -a)"
          docker --version || echo "docker not available"

      - name: Check target connectivity
        run: |
          TARGET="http://juice-shop.herokuapp.com" # <--- ajuste se usar outro target
          echo "Testing connectivity to $TARGET"
          # tenta 3x e mostra cabeÃ§alho
          for i in 1 2 3; do
            echo "Attempt $i"
            curl -I --max-time 15 "$TARGET" && break || sleep 2
          done

      - name: Run OWASP ZAP Baseline (Docker)
        env:
          TARGET: "http://juice-shop.herokuapp.com" # <--- ajuste sua URL de staging aqui
        run: |
          set -o pipefail
          # roda zap-baseline.py e redireciona stdout/stderr pra arquivo de log
          docker run --rm -v "${{ github.workspace }}":/zap/wrk/:rw -t ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t "$TARGET" -r zap_report.html -J zap_report.json -s "xss,sqli,auth" > zap_run.log 2>&1 || echo "zap-baseline exited non-zero (see zap_run.log)"

      - name: Show last 200 lines of ZAP run log (if any)
        if: always()
        run: |
          echo "=== ZAP runtime log (tail) ==="
          if [ -f zap_run.log ]; then
            tail -n 200 zap_run.log || true
          else
            echo "zap_run.log not found"
          fi

      - name: Upload ZAP reports and logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: |
            zap_report.html
            zap_report.json
            zap_run.log
